best_params_RGBSG,best_model_RGBSG,cindex_train_RGBSG,cindex_test_RGBSG
"{'estimator__batch_size': 256, 'estimator__lr': 0.004027164916321768, 'estimator__module__dropout': 0.48391006183315866, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8274d300>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8274d210>)])),
                ('est...
      (10): Dropout(p=0.48391006183315866, inplace=False)
      (11): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=512, out_features=512, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.48391006183315866, inplace=False)
      (15): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.6583481976743216,0.6693241602590044
"{'estimator__batch_size': 64, 'estimator__lr': 0.0028873978594663435, 'estimator__module__dropout': 0.1777556148420626, 'estimator__module__n_layers': 1, 'estimator__module__num_nodes': 128, 'estimator__optimizer__weight_decay': 0.2}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8269e080>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8269d510>)])),
                ('estimator',
                 <class 'skorch.net.NeuralNet'>[initialized](
  module_=SurvivalModel(
    (layers): Sequential(
      (0): Linear(in_features=7, out_features=128, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.1777556148420626, inplace=False)
      (3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=128, out_features=1, bias=True)
    )
  ),
))])>",0.5968827160752247,0.570859026153519
"{'estimator__batch_size': 128, 'estimator__lr': 0.00821306507955111, 'estimator__module__dropout': 0.10430899624741224, 'estimator__module__n_layers': 1, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8269d7b0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8269db70>)])),
                ('estimator',
                 <class 'skorch.net.NeuralNet'>[initialized](
  module_=SurvivalModel(
    (layers): Sequential(
      (0): Linear(in_features=7, out_features=512, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.10430899624741224, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.6093713009398488,0.5741771813872755
"{'estimator__batch_size': 1024, 'estimator__lr': 0.00921770299429662, 'estimator__module__dropout': 0.6418593042178288, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0.1}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8274df00>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8274cc70>)])),
                ('est...
      (2): Dropout(p=0.6418593042178288, inplace=False)
      (3): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=64, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.6418593042178288, inplace=False)
      (7): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.650923716100984,0.6215375918598078
"{'estimator__batch_size': 512, 'estimator__lr': 0.004416103131071934, 'estimator__module__dropout': 0.56841329333342, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf8272a290>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf82729cf0>)])),
                ('est...
      (2): Dropout(p=0.56841329333342, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.56841329333342, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.6352764965008173,0.6230205356904425
