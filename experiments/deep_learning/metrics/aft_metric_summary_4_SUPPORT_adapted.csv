best_params_SUPPORT,best_model_SUPPORT,cindex_train_SUPPORT,cindex_test_SUPPORT
"{'estimator__batch_size': 64, 'estimator__module__dropout': 0.24543885184642653, 'estimator__module__n_layers': 1, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0.05}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeb4940>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeb6020>)])),
                ('estimator',
                 <class 'skorch.net.NeuralNet'>[initialized](
  module_=SurvivalModel(
    (layers): Sequential(
      (0): Linear(in_features=14, out_features=64, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.24543885184642653, inplace=False)
      (3): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.5922287909229297,0.5716160630556147
"{'estimator__batch_size': 128, 'estimator__module__dropout': 0.5304435922626105, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeeb7f0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeeb220>)])),
                ('est...
      (2): Dropout(p=0.5304435922626105, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.5304435922626105, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.6011249914882797,0.5988581265325567
"{'estimator__batch_size': 128, 'estimator__module__dropout': 0.5304435922626105, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeb6bc0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2aeb6e60>)])),
                ('est...
      (2): Dropout(p=0.5304435922626105, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.5304435922626105, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.5999771074674224,0.5845919379538752
"{'estimator__batch_size': 128, 'estimator__module__dropout': 0.5304435922626105, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2ae79210>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2ae7bfa0>)])),
                ('est...
      (2): Dropout(p=0.5304435922626105, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.5304435922626105, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.6006417920257067,0.6017588519142449
"{'estimator__batch_size': 128, 'estimator__module__dropout': 0.5304435922626105, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2ae7bf10>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fca2ae78760>)])),
                ('est...
      (2): Dropout(p=0.5304435922626105, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.5304435922626105, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.5990247562062123,0.5953696434436915
