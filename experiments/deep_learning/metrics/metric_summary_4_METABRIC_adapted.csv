best_params_METABRIC,best_model_METABRIC,cindex_train_METABRIC,cindex_test_METABRIC
"{'estimator__batch_size': 1024, 'estimator__lr': 0.0029457590634553443, 'estimator__module__dropout': 0.020095730732172898, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb318533790>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb318533070>)])),
                ('est...
      (10): Dropout(p=0.020095730732172898, inplace=False)
      (11): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=512, out_features=512, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.020095730732172898, inplace=False)
      (15): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.42923817638049455,0.47791754295464467
"{'estimator__batch_size': 128, 'estimator__lr': 0.004133014710217859, 'estimator__module__dropout': 0.5275029907964709, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 128, 'estimator__optimizer__weight_decay': 0.05}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb318532f80>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb318530a30>)])),
                ('est...
      (10): Dropout(p=0.5275029907964709, inplace=False)
      (11): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=128, out_features=128, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.5275029907964709, inplace=False)
      (15): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=128, out_features=1, bias=True)
    )
  ),
))])>",0.39934966187674364,0.41125685854195754
"{'estimator__batch_size': 512, 'estimator__lr': 0.001632331056214901, 'estimator__module__dropout': 0.4958644990485889, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0.01}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb33efaa0b0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb33efa8d00>)])),
                ('est...
      (2): Dropout(p=0.4958644990485889, inplace=False)
      (3): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=64, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.4958644990485889, inplace=False)
      (7): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.374810673278314,0.41726304938247133
"{'estimator__batch_size': 64, 'estimator__lr': 0.003985991114942015, 'estimator__module__dropout': 0.010595415935039997, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb3184b9660>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb3184b9450>)])),
                ('est...
      (2): Dropout(p=0.010595415935039997, inplace=False)
      (3): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=64, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.010595415935039997, inplace=False)
      (7): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.39394884282631504,0.36684328804403854
"{'estimator__batch_size': 128, 'estimator__lr': 0.00988144012727498, 'estimator__module__dropout': 0.3691702087640721, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0.1}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb3184e46a0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fb3184e45b0>)])),
                ('est...
      (2): Dropout(p=0.3691702087640721, inplace=False)
      (3): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=64, out_features=64, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.3691702087640721, inplace=False)
      (7): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.41330492424242427,0.40966844748584347
