best_params_FLCHAIN,best_model_FLCHAIN,cindex_train_FLCHAIN,cindex_test_FLCHAIN
"{'estimator__batch_size': 64, 'estimator__lr': 0.0016226450081613204, 'estimator__module__dropout': 0.1220408751128469, 'estimator__module__n_layers': 1, 'estimator__module__num_nodes': 128, 'estimator__optimizer__weight_decay': 0}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce65f0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce5f30>)])),
                ('estimator',
                 <class 'skorch.net.NeuralNet'>[initialized](
  module_=SurvivalModel(
    (layers): Sequential(
      (0): Linear(in_features=8, out_features=128, bias=True)
      (1): ReLU()
      (2): Dropout(p=0.1220408751128469, inplace=False)
      (3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=128, out_features=1, bias=True)
    )
  ),
))])>",0.7899278184860111,0.7919732253346833
"{'estimator__batch_size': 256, 'estimator__lr': 0.00240345695830726, 'estimator__module__dropout': 0.12734943502748727, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 256, 'estimator__optimizer__weight_decay': 0.2}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce42b0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce79a0>)])),
                ('est...
      (10): Dropout(p=0.12734943502748727, inplace=False)
      (11): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=256, out_features=256, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.12734943502748727, inplace=False)
      (15): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=256, out_features=1, bias=True)
    )
  ),
))])>",0.797465114491026,0.7971722197981749
"{'estimator__batch_size': 512, 'estimator__lr': 0.004877973050019182, 'estimator__module__dropout': 0.6234295470265919, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 128, 'estimator__optimizer__weight_decay': 0.2}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce4460>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafc1ce40a0>)])),
                ('est...
      (10): Dropout(p=0.6234295470265919, inplace=False)
      (11): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=128, out_features=128, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.6234295470265919, inplace=False)
      (15): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=128, out_features=1, bias=True)
    )
  ),
))])>",0.7970671456336469,0.7871528427480238
"{'estimator__batch_size': 128, 'estimator__lr': 0.0012435043713847444, 'estimator__module__dropout': 0.32188994207627575, 'estimator__module__n_layers': 2, 'estimator__module__num_nodes': 512, 'estimator__optimizer__weight_decay': 0.4}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf70f3d780>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf70f3c700>)])),
                ('est...
      (2): Dropout(p=0.32188994207627575, inplace=False)
      (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Linear(in_features=512, out_features=512, bias=True)
      (5): ReLU()
      (6): Dropout(p=0.32188994207627575, inplace=False)
      (7): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Linear(in_features=512, out_features=1, bias=True)
    )
  ),
))])>",0.8052710034610456,0.7736638763683193
"{'estimator__batch_size': 1024, 'estimator__lr': 0.0010393020021303519, 'estimator__module__dropout': 0.49154843420129685, 'estimator__module__n_layers': 4, 'estimator__module__num_nodes': 64, 'estimator__optimizer__weight_decay': 0}","<bound method Pipeline.get_params of Pipeline(steps=[('scaler',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('customstandardscaler',
                                                  CustomStandardScaler(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7fafa24a66b0>),
                                                 ('customstandardscaler2',
                                                  CustomStandardScaler2(),
                                                  <sklearn.compose._column_transformer.make_column_selector object at 0x7faf71009930>)])),
                ('est...
      (10): Dropout(p=0.49154843420129685, inplace=False)
      (11): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Linear(in_features=64, out_features=64, bias=True)
      (13): ReLU()
      (14): Dropout(p=0.49154843420129685, inplace=False)
      (15): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Linear(in_features=64, out_features=1, bias=True)
    )
  ),
))])>",0.7824358661086012,0.7829500862259231
